//
//  BreedQuizPresenter.swift
//  CatApiTest
//
//  Created by Alex Kiritsa on 22.05.2020.
//  Copyright (c) 2020 Alex Kiritsa. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BreedQuizPresentationLogic {
    func presentData(response: BreedQuiz.Model.Response.ResponseType)
}

class BreedQuizPresenter: BreedQuizPresentationLogic {
    weak var viewController: BreedQuizDisplayLogic?
    
    func presentData(response: BreedQuiz.Model.Response.ResponseType) {
        switch response {
        case .presentBreed(let breeds, let imageBreed):
            guard let breed = imageBreed.breeds.first else { return }
            let stringArray = self.chooseBreeds(breeds: breeds, currentBreed: breed)
            let viewModel = BreedQuizViewModel(imageUrl: imageBreed.url, buttonText: stringArray, currentBreed: breed)
            viewController?.displayData(viewModel: .displayBreedQuiz(quizViewModel: viewModel))
        }
    }
    
    private func chooseBreeds(breeds: [BreedResponse], currentBreed: BreedResponse) -> [String] {
        var stringArray = [String]()
        for _ in 0...4 {
            if stringArray.count < 3 {
                guard let breed = breeds.randomElement() else { return [""]}
                if breed.id != currentBreed.id {
                    stringArray.append(breed.name)
                }
            }
        }
        stringArray.append(currentBreed.name)
        stringArray.shuffle()
        return stringArray
    }
}
